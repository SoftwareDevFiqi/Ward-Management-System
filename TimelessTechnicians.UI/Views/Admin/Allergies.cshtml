@model IEnumerable<TimelessTechnicians.UI.Models.Allergy>
@await Html.PartialAsync("_Notification")
@await Html.PartialAsync("_Navbar")

@{
    ViewData["Title"] = "Allergies";
    var pageNumber = ViewData["PageNumber"] as int? ?? 1;
    var totalPages = ViewData["TotalPages"] as int? ?? 1;
    // Sort the allergies by name in ascending order
    var sortedModel = Model.OrderBy(a => a.Name);
}

<div class="container">
    <h1>Allergies</h1>
    <a asp-action="ExportAllergiesToPdf" class="btn btn-primary">Export to PDF</a>
    <div class="d-flex justify-content-between align-items-center mb-3">
        <a asp-action="AddAllergy" class="btn btn-primary">Add New Allergy</a>
        <form method="get" asp-action="Allergies" class="form-inline">
            <input type="text" id="allergyAutocomplete" name="searchString" class="form-control mr-2" placeholder="Search allergies" value="@ViewData["SearchString"]" />
            <button type="submit" class="btn btn-secondary">Search</button>
        </form>
    </div>

    <form id="bulkDeleteForm" asp-action="BulkDeleteAllergies" method="post">
        <div class="mb-3">
            <input type="checkbox" id="select-all" /> Select All
            <button type="submit" class="btn btn-danger ml-2">Delete Selected</button>
        </div>
        <table class="table table-striped table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>Select</th>
                    <th>@Html.DisplayNameFor(model => model.First().Name)</th>
                    <th>@Html.DisplayNameFor(model => model.First().Description)</th>
                    <th style="width: 150px;">Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (sortedModel.Any())
                {
                    // Get the ID of the newly added allergy from TempData
                    var newlyAddedAllergyId = TempData["NewlyAddedAllergyId"] as int?;

                    foreach (var item in sortedModel)
                    {
                        <tr>
                            <td>
                                <input type="checkbox" class="allergy-checkbox" data-id="@item.AllergyId" name="selectedIds" value="@item.AllergyId" />
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)

                                <!-- Show green tick if this is the newly added allergy -->
                                @if (newlyAddedAllergyId.HasValue && item.AllergyId == newlyAddedAllergyId)
                                {
                                    <span class="text-success">
                                        <i class="fas fa-check-circle"></i> <!-- Font Awesome icon for green tick -->
                                    </span>
                                }
                            </td>
                            <td>@Html.DisplayFor(modelItem => item.Description)</td>
                            <td>
                                <a asp-action="EditAllergy" asp-route-id="@item.AllergyId" class="btn btn-warning btn-sm">
                                    <i class="fas fa-edit"></i> Edit
                                </a>
                                <a asp-action="DeleteAllergy" asp-route-id="@item.AllergyId" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete this allergy?');">
                                    <i class="fas fa-trash-alt"></i> Delete
                                </a>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="4" class="text-center">No allergies found.</td>
                    </tr>
                }
            </tbody>


        </table>
    </form>




    <!-- Pagination Controls with Font Awesome Icons -->
    <nav aria-label="Allergy Pagination">
        <ul class="pagination justify-content-center">
            @if (pageNumber > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Allergies" asp-route-pageNumber="@(pageNumber - 1)" asp-route-searchString="@ViewData["SearchString"]">
                        <i class="fas fa-arrow-left"></i> Previous
                    </a>
                </li>
            }
            @if (pageNumber < totalPages)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Allergies" asp-route-pageNumber="@(pageNumber + 1)" asp-route-searchString="@ViewData["SearchString"]">
                        Next <i class="fas fa-arrow-right"></i>
                    </a>
                </li>
            }
        </ul>
    </nav>



</div>

@section Scripts {
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <script>
            $(document).ready(function () {
        // Initialize autocomplete
        $("#allergyAutocomplete").autocomplete({
                    source: function (request, response) {
                $.ajax({
                        url: '@Url.Action("GetAllergyNames", "Admin")',  // Update with your controller's actual name
                    data: { term: request.term },
                    success: function (data) {
                        response(data);  // Populate the autocomplete with the returned data
                    }
                });
                    },
            minLength: 2,  // Minimum characters before triggering the search
            select: function (event, ui) {
                // When an option is selected, set the input value and submit the form
                $("#allergyAutocomplete").val(ui.item.value);
                $("form").submit();  // Optionally submit the form automatically when an item is selected
                    }
                });
            });
    </script>
}






<style>
    body {
        background-color: #f8f9fa; /* Light background for contrast */
    }

    .container {
        margin-top: 20px;
        margin-bottom: 20px;
    }

    h1 {
        margin-bottom: 20px; /* Add spacing below the header */
        font-size: 2rem; /* Increase header font size */
    }

    .table th, .table td {
        vertical-align: middle;
        text-align: center;
    }

    .btn {
        margin-left: 5px;
    }

    .pagination {
        margin-top: 20px;
    }

    .page-item.active .page-link {
        background-color: #007bff;
        border-color: #007bff;
    }

    .page-link {
        color: #007bff; /* Default color for links */
        transition: background-color 0.3s, color 0.3s; /* Smooth transition for hover effects */
    }

        .page-link:hover {
            background-color: #0056b3;
            color: #fff;
        }

    /* Hover Effects for Table Rows */
    tbody tr:hover {
        background-color: rgba(0, 123, 255, 0.1);
        transition: background-color 0.3s ease;
    }

    /* Select All Checkbox Styling */
    #select-all {
        margin-right: 10px; /* Spacing to the right */
    }

    .text-success {
        color: #28a745; /* Bootstrap green color */
        font-size: 1.2rem; /* Adjust the icon size */
    }
</style>
