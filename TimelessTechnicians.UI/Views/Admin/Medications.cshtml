@model IEnumerable<TimelessTechnicians.UI.Models.Medication>
@await Html.PartialAsync("_Notification")
@await Html.PartialAsync("_Navbar")
@{
    ViewData["Title"] = "Medications";
    var pageNumber = ViewData["PageNumber"] as int? ?? 1;
    var totalPages = ViewData["TotalPages"] as int? ?? 1;
}

<div class="container">
    <h1>Medications</h1>
    <a href="@Url.Action("ExportMedicationsToPdf", "Admin")" class="btn btn-primary">Export to PDF</a>

    <div class="d-flex justify-content-between align-items-center mb-3">
        <a asp-action="AddMedication" class="btn btn-primary">Add New Medication</a>
        <form method="get" asp-action="Medications" class="form-inline">
            <input type="text" id="medicationAutocomplete" name="searchString" class="form-control mr-2" placeholder="Search medications" value="@ViewData["SearchString"]" />
            <button type="submit" class="btn btn-secondary">Search</button>
        </form>
    </div>


    <!-- Bulk Delete Form -->
    <form id="bulkDeleteForm" asp-action="BulkDeleteMedication" method="post">
        <div class="mb-3">
            <input type="checkbox" id="selectAll" /> Select All
            <button type="submit" class="btn btn-danger ml-2">Delete Selected</button>
        </div>
        <table class="table table-striped table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>Select</th> <!-- Checkbox for each medication -->
                    <th>@Html.DisplayNameFor(model => model.First().Name)</th>
                    <th>@Html.DisplayNameFor(model => model.First().Description)</th>
                    <th style="width: 150px;">Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Any())
                {
                    foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <input type="checkbox" class="medication-checkbox" name="selectedMedications" value="@item.MedicationId" />
                            </td>
                            <td>@Html.DisplayFor(modelItem => item.Name)</td>
                            <td>@Html.DisplayFor(modelItem => item.Description)</td>
                            <td>
                                <a asp-action="EditMedication" asp-route-id="@item.MedicationId" class="btn btn-warning btn-sm">
                                    <i class="fas fa-edit"></i> Edit
                                </a>
                                <a asp-action="DeleteMedication" asp-route-id="@item.MedicationId" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete this medication?');">
                                    <i class="fas fa-trash-alt"></i> Delete
                                </a>
                            </td>

                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="4" class="text-center">No medications found.</td>
                    </tr>
                }
            </tbody>
        </table>
    </form>

    <!-- Pagination Controls -->
    <nav aria-label="Medication Pagination">
        <ul class="pagination justify-content-center">
            @if (pageNumber > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Medications" asp-route-pageNumber="@(pageNumber - 1)" asp-route-searchString="@ViewData["SearchString"]">
                        <i class="fas fa-chevron-left"></i> Previous
                    </a>
                </li>
            }
            @if (pageNumber < totalPages)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Medications" asp-route-pageNumber="@(pageNumber + 1)" asp-route-searchString="@ViewData["SearchString"]">
                        Next <i class="fas fa-chevron-right"></i>
                    </a>
                </li>
            }
        </ul>
    </nav>

</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Autocomplete functionality for medication names
            $("#medicationAutocomplete").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '@Url.Action("GetMedicationNames", "Admin")', // Ensure this is the correct controller
                        data: { term: request.term },
                        success: function (data) {
                            response(data);
                        }
                    });
                },
                minLength: 2,
                select: function (event, ui) {
                    // When a suggestion is selected, set the input value and submit the form
                    $("#medicationAutocomplete").val(ui.item.value);
                    $("form").submit();
                }
            });

            const checkboxes = document.querySelectorAll('input[name="selectedMedications"]');

            // Load checkbox states from localStorage
            checkboxes.forEach((checkbox) => {
                const medicationId = checkbox.value;
                checkbox.checked = localStorage.getItem(medicationId) === 'true'; // Restore state

                // Save the state in localStorage when the checkbox is changed
                checkbox.addEventListener("change", function () {
                    localStorage.setItem(medicationId, checkbox.checked);
                });
            });

            // Select all checkboxes functionality
            const selectAllCheckbox = document.getElementById("selectAll");
            selectAllCheckbox.addEventListener("change", function () {
                checkboxes.forEach((checkbox) => {
                    checkbox.checked = this.checked; // Set the state of all checkboxes
                    localStorage.setItem(checkbox.value, this.checked); // Save the state in localStorage
                });
            });
        });
    </script>
}


<style>
    .container {
        margin-top: 20px;
        margin-bottom: 20px;
    }

    .table th, .table td {
        vertical-align: middle;
    }

    .thead-dark th {
        background-color: #343a40; /* Dark background for header */
        color: white; /* White text for better contrast */
    }

    .btn {
        margin-left: 5px;
    }

    .pagination {
        margin-top: 20px;
    }

    .page-item.active .page-link {
        background-color: #007bff; /* Primary color for active page */
        border-color: #007bff;
    }

    .page-link:hover {
        background-color: #0056b3; /* Darker shade on hover */
        color: #fff;
    }

    /* Hover Effects for Table Rows */
    tbody tr:hover {
        background-color: rgba(0, 123, 255, 0.1); /* Light blue background on hover */
        transition: background-color 0.3s ease;
    }
</style>
