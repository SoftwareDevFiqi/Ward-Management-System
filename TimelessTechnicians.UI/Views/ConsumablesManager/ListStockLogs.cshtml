@model IEnumerable<TimelessTechnicians.UI.Models.StockLog>
@await Html.PartialAsync("_Notification")
@await Html.PartialAsync("_Navbar")
@{
    ViewData["Title"] = "Stock Logs";
}

<div class="container mt-5">
    <h2 class="text-center">Stock Logs</h2>

    <table class="table table-striped table-bordered mt-4">
        <thead class="thead-dark">
            <tr>
                <th>Consumable</th>
                <th>Quantity Taken</th>
                <th>Date Taken</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                foreach (var log in Model)
                {
                    <tr>
                        <td>@log.Consumable?.Name</td>
                        <td>@log.QuantityTaken</td>
                        <td>@log.DateTaken.ToString("dd/MM/yyyy HH:mm:ss")</td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="3" class="text-center">No stock logs available.</td>
                </tr>
            }
        </tbody>
    </table>

    <div class="text-center mt-4">
        <a asp-action="ConsumablesManagerDashboard" class="btn btn-primary">Return to Dashboard</a>
        <a asp-action="Consumables" class="btn btn-secondary">View Consumables</a>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<style>
    /* Optional: Add some custom styles */
    .table {
        border-radius: 10px;
        overflow: hidden; /* Rounded corners */
    }

    .thead-dark th {
        background-color: #343a40; /* Dark background for header */
        color: white; /* White text for header */
    }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: rgba(0, 0, 0, 0.05); /* Striped background for odd rows */
    }

    .table-bordered th, .table-bordered td {
        border: 1px solid #dee2e6
